<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[GitHub設置添加SSH]]></title>
    <url>%2F2018%2F10%2F04%2FGitHub%E8%A8%AD%E7%BD%AE%E6%B7%BB%E5%8A%A0SSH%2F</url>
    <content type="text"><![CDATA[一、https 和 SSH 的区别：1、前者可以随意克隆github上的项目，而不管是谁的；而后者则是你必须是你要克隆的项目的拥有者或管理员，且需要先添加 SSH key ，否则无法克隆。 2、https url 在push的时候是需要验证用户名和密码的；而 SSH 在push的时候，是不需要输入用户名的，如果配置SSH key的时候设置了密码，则需要输入密码的，否则直接是不需要输入密码的。 二、在 github 上添加 SSH key 的步骤：1、首先需要检查你电脑是否已经有 SSH key运行Bash 客户端或者zsh，输入如下代码： [bash] $ cd ~/.ssh $ ls [zsh] $ la ~/.ssh 检查是否已经存在 id_rsa.pub 或 id_dsa.pub 文件 如若已存在，则直接复制粘贴即可： cat ~/ssh/id_dsa.pub 复制内容在终端执行Ctrl+Shift+V即可 2、如若不存在，则创建一个 SSH key$ ssh-keygen -t rsa -C “email@example.com“生成 id_rsa 和 id_rsa.pub 两个秘钥文件。 接着会提示你输入两次密码 Enter passphrase (empty for no passphrase): 该密码是你push文件的时候要输入的密码，而不是github管理者的密码）， 当然，你也可以不输入密码，直接按回车。那么push的时候就不需要输入密码，直接提交到github上了，如： Enter same passphrase again: 接下来，就会显示如下代码提示，如： Your identification has been saved in /home/user/.ssh/id_rsa.Your public key has been saved in /home/user/.ssh/id_rsa.pub.The key fingerprint is:SHA256:XXXXXXXXXXXXXXXXX email@example.com The key’s randomart image is: 当你看到上面这段代码的收，那就说明，你的 SSH key 已经创建成功，你只需要添加到github的SSH key上就可以了。 3、添加你的 SSH key 到 github上面去1)你需要拷贝 id_rsa.pub 文件的内容，你可以用编辑器如kate、leafpad等打开文件复制，也可以用命令复制该文件的内容，如： $ cat ~/.ssh/id_rsa.pub 复制内容在终端执行Ctrl+Shift+V即可 2）登录你的github账号，点击上角的头像设置Settings进入，然后点击菜单栏的 SSH key 进入页面添加 SSH key。 3)点击 SSH and GPG keys 按钮添加一个 New SSH key 。Title 输入框你可以输入一个该 SSH key 显示在 github 上的一个别名，例如设备名称或软件名称；把复制的 SSH key 代码粘贴到 key 所对应的输入框中，注意 SSH key 代码的前后不要留有空格或者回车。 4）测试SSH key在Bash 中输入以下代码 $ ssh -T git@github.com 当你输入以上代码时，会有一段警告代码，如： ➜ blog ssh -T git@github.com 如果你创建 SSH key 的时候设置了密码，接下来就会提示你输入密码： Enter passphrase for key ‘/home/levo/.ssh/id_rsa’: Hi user! You’ve successfully authenticated, but GitHub does not provide shell access. 到此，GitHub SSH设置完成!]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>SSH</tag>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[写在工作一年之余]]></title>
    <url>%2F2017%2F07%2F13%2F%E5%86%99%E5%9C%A8%E5%B7%A5%E4%BD%9C%E4%B8%80%E5%B9%B4%E4%B9%8B%E4%BD%99%2F</url>
    <content type="text"><![CDATA[一、补遗-我的大学​ 总是感觉没时间去写这些内容，曾想毕业一年时写点东西，那天好多同学在转发毕业时的合影，都在感叹时光蹉跎，不知觉间便一晃一年。曾和大学两个好友约定毕业三五年间必须回去聚聚，看我这情形，爽约的可能性很大诶。不过还好，依旧有几个好友时常通消息，只是听着他们的故事，在千里之外对着窗边的明月独酌，也许好多人都是见一面之后很久都很难再见了吧，毕业要走的时候只和几个舍友去学校后的餐馆胡乱吃了一通，食不知味，感叹时光易逝，然后不说再见，背着他们，学着海贼王里的握着拳头把右手举得高高的，顺着阳光落下的方向远行。有些人千辛万苦是为了遇见，而有些人本来遇见就是为了分开。只不过后来有好友发消息破口大骂说不着声迹的离开，千言万语，只能陪笑，不过每一个时期，遇到一帮志同道合的朋友，做一些听着犯二的事，那便是那个时期最好的记忆了。倒是为了充分说明自己是个吃货，有同学今年毕业的时候居然要带点津门的小吃回来，倒被嘲笑许久。有人说星空和海一直都在，只是有时候迷失了寻找到那片星空那片海的通道，那片记忆都在，因为你走过的路不会骗你。 二、工作之余​ 回来做职教应该说也没什么准备，但想了许久，不能对不起花费好长时间去探究的职业教育学与职教心理学，其它的至于什么限制倒被自己丢到了爪哇国。其实关于选择自己当时还是挺迷茫的，当时的言论是大城市、小城市、国企、外企、大公司、小单位…….各种铺天而来，想了许久，就如同去商店买衣服，有衣服虽然当时看着不是太对眼，不过穿久了都会觉得这才是自己的风格，再者有了工作上的限制，无论如何选择都会有自己的路，该自己做的事吧。所谓人生之路，哪有什么遂人心愿，不过是自己所走过的痕迹罢了。 ​ 工作感觉比较充实，学校的网络信息化工作让我能继续在专业方面有所应用，也不失自己曾经的努力。所以很是感谢职校，感谢职校的上司与同事，特别是董老师的提携与关照，虽然到现在文案依旧不咋会写，说来都是惭愧。工作了一年，零碎工作也做了不少，我想做完工作后觉得自己能对得起所做的事，对的起自己就行，不然也不会半夜十二点冒着大雨去空无一人的校园，不会为解决问题整天呆在机房，不会顶着烈日，也不会每天起早贪黑了，然而有人认为这些很苦、很累，的确是，温柔乡总是醉生梦死的追求，可是又能怎样呢？曾有人对我告诫，苦难是一笔财富，财富不财富那是后话，关键是它能让你保持清醒，我可以在学生不早操的操场坚持大学的习惯去跑步，可以坚持去做自己想做的事，可以捣腾程序，可以写博客，可以研究技术，可以读书写字……而其实人站在阳光下，总会有影子存在，但转过身，依旧是阳光普照万物（这是句有温度的话）。 三、给学生们​ 毕竟带班也不是很多，去山东实习的时候，那帮孩子要比现在的你们顽皮很多，但现在也有好多山东的小孩子们经常来聊天，看着他们能有好的职业，就很是欣慰了。正式接手教学时，我想你们一定很不服管，有同事建议需要严肃管教，可到现在我发现，你们其实很好管。有人曾说当老师到底是为了什么，那除了培养学生还能做什么呢？所以常常把教学业绩与各种挂钩，我想先必须培养出好的学生，才能有好的业绩，再去做其他事。有人常说，职校的学生都是“顽固分子”，职校的老师能教育后考上大学那是一件件很不容易的事，的确是。但我没感觉你们跟普通中学学生有什么不同，用了一年的时间，感觉到你们的潜力巨大，所以一直未夸赞你们，在魔鬼训练下能一直坚持并未放弃的学生们，恭喜你们，你们已有约四分之三的同学达到所期望的知识水平了，再稍微加把劲就可以直接出师参加高考了。所以不要因为现在成绩的多少而影响对知识的追求！ 四、关于成长​ 我国规定，年满18周岁就算是成年，又出规定，14-24周岁算作青年，掐指头算了好久，发现两者都差不多轮不上了，可是说到底，年岁上早已过期，怎样才算是成长呢？曾有人对我谆谆教诲，快点长大，到现在依旧有些懵，事物的好坏与影响依旧不能判断，所以只能做旁观。与人为善，必有善终，曾看过夏目，有很多未知的事，终究需要去面对，保持积极的心态是好的，人与人之间，终究会和平相处，之前必有很多碰撞。 五、关于读书​ 老哥曾跟我说，读书应该是最不应该丢弃的，读书是最好的事。曾说17年要读38本书，上半年有些懒，只读了15本，还差一丢丢，最近放假，应该恶补下了。]]></content>
      <categories>
        <category>Summary</category>
      </categories>
      <tags>
        <tag>Blog</tag>
        <tag>Summary</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[日志-Burpsuite使用]]></title>
    <url>%2F2017%2F07%2F09%2F%E6%97%A5%E5%BF%97-Burpsuite%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[启动Burpsuite1m87@m87:~$ burpsuite 编辑Proxy Listeners选中127.0.0.1:8080，点击edit 修改端口号 编辑Foxfire点击Preferences—&gt;Advanced，在Network栏目下设置浏览器代理 修改Http Proxy及端口号为Burpsuite设置内容 Burpsuit设置在Proxy栏目下Intercept下设置Intercept is on 捕获网页内容使用浏览器访问网页，则在Burpsuite栏目Target栏目下可以发现内容]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub搭建Blog]]></title>
    <url>%2F2017%2F07%2F03%2F%E4%BD%BF%E7%94%A8GitHub%E6%90%AD%E5%BB%BABlog%2F</url>
    <content type="text"><![CDATA[Blog （网络日志） 网络日志，外语全名weB LOG，后来缩写为BLOG。 它是继Email、BBS、IM之后出现的第四种网络交流方式，是网络时代的个人“读者文摘”，是以超级链接为武器的网络日记，是代表着新的生活方式和新的工作方式，更代表着新的学习方式。 简言之，网络日志就是以网络作为载体，简易迅速便捷地发布自己的心得，及时有效轻松地与他人进行交流，再集丰富多彩的个性化展示于一体的综合性平台。 免费易用的Blog层出不穷，使用者亦多有各自见解。 现将在Linux环境下搭建GitHub博客相关内容作以回顾： Step1 检查系统是否安装必要组件安装前必须检查是否安装git、nodejs以及npm直接在命令行输入即可： 123456m87@m87:~$ gitusage: git --version -C &lt;path&gt; [--exec-path[=&lt;path&gt;]] [--html-path] [--man-path] [--info-path] [-p | --paginate | --no-pager] [--no-replace-objects] [--bare] [--git-dir=&lt;path&gt;] [--work-tree=&lt;path&gt;] [--namespace=&lt;name&gt;] &lt;command&gt; [&lt;args&gt;] 12m87@m87:~$ npmbash:npm not found Step2 安装Nodejs1$ wget -qO- https://raw.github.com/creationix/nvm/master/install.sh | sh 安装完成后，重启终端并执行下列命令即可安装 Node.js。 12345678910111213141516171819$ nvm install stablem87@m87:~$ nvm install stableDownloading and installing node v8.1.3...Downloading https://nodejs.org/dist/v8.1.3/node-v8.1.3-linux-x64.tar.xz...######################################################################## 100.0%Computing checksum with sha256sumChecksums matched!nvm is not compatible with the npm config "prefix" option: currently set to "/usr/local"Run nvm use --delete-prefix v8.1.3 to unset it.m87@m87:~$ 执行以下命令即可使用nodejs，并在当前用户下使用npm 1m87@m87:~$ nvm use --delete-prefix v8.1.3 123456789101112m87@m87:~$ npmUsage: npm &lt;command&gt;where &lt;command&gt; is one of:access, adduser, bin, bugs, c, cache, completion, config,ddp, dedupe, deprecate, dist-tag, docs, doctor, edit,explore, get, help, help-search, i, init, install,install-test, it, link, list, ln, login, logout, ls,outdated, owner, pack, ping, prefix, prune, publish, rb,rebuild, repo, restart, root, run, run-script, s, se,search, set, shrinkwrap, star, stars, start, stop, t, team,test, tst, un, uninstall, unpublish, unstar, up, update, v,version, view, whoami 如此，则nodejs、npm、git相应都已安装。 Step3 安装hexo1m87@m87:~$ npm install hexo-cli -g 12345678910111213141516/home/m87/.nvm/versions/node/v8.1.3/bin/hexo -&gt; /home/m87/.nvm/versions/node/v8.1.3/lib/node_modules/hexo-cli/bin/hexo&gt; fsevents@1.1.2 install /home/m87/.nvm/versions/node/v8.1.3/lib/node_modules/hexo-cli/node_modules/fsevents&gt; node install&gt; dtrace-provider@0.8.3 install /home/m87/.nvm/versions/node/v8.1.3/lib/node_modules/hexo-cli/node_modules/dtrace-provider&gt; node scripts/install.js&gt; hexo-util@0.6.0 postinstall /home/m87/.nvm/versions/node/v8.1.3/lib/node_modules/hexo-cli/node_modules/hexo-util&gt; npm run build:highlight&gt; hexo-util@0.6.0 build:highlight /home/m87/.nvm/versions/node/v8.1.3/lib/node_modules/hexo-cli/node_modules/hexo-util&gt; node scripts/build_highlight_alias.js &gt; highlight_alias.json+ hexo-cli@1.0.3added 218 packages in 21.617s 如此，hexo已经安装完成。 Step4 创建并部署Blog根目录在本地～目录下创建Blog文件夹 1m87@m87:~$ mkdir Blog 在Blog文件夹目录下执行生成静态页面命令： 1$ hexo generate 或者：hexo g 此时若出现如下报错： 12345ERROR Local hexo not found in ~/blogERROR Try runing: 'npm install hexo --save'则执行命令：npm install hexo --save若无报错，自行忽略此步骤。 部署博客： 1$ hexo deploy 或者：hexo d 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git： 1$ npm install hexo-deployer-git --save 若你未关联Github，则执行hexo deploy命令时终端会提示你输入Github的用户名和密码，即 12Username for 'https://github.com':Password for 'https://github.com': hexo deploy命令执行成功后，能看到和打开http://localhost:4000页面。 Step5 创建GitHub账号访问https://github.com 点击Sing up进行注册，或已注册的点击Sing in登录。 登录你的Github帐号，新建仓库，名为用户名.github.io固定写法。 Step6 关联GitHub检查SSH keys是否存在Github 执行如下命令，检查SSH keys是否存在。如果有文件id_rsa.pub或id_dsa.pub，则将SSH key添加到Github中，否则进入下一步生成SSH key。 1$ ls -al ~/.ssh 生成新的ssh key 执行如下命令生成public/private rsa key pair，注意将your_email@example.com换成你自己注册Github的邮箱地址。 1$ ssh-keygen -t rsa -C "your_email@example.com" 默认会在相应路径下（~/.ssh/id_rsa.pub）生成id_rsa和id_rsa.pub两个文件。 可以到用户根目录下使用快捷键“Ctrl+H”显示所有隐藏文件，进入“.ssh”文件，打开id_rsa.pub，复制其内所有内容。 本地blog目录如下： 1234567_config.yml db.jsonnode_modulespackage.jsonscaffoldssourcethemes 使用编辑器编辑“_config.yml”: 打开后往下滑到最后，修改成下边的样子： 1234deploy: type: git repository: https://github.com/wndkz/wndkz.github.io.git branch: master 你需要将repository后wndkz换成你自己的用户名 切记：冒号后必须有一个空格! Step7 GitHub上添加SSH点击GitHub页面右上角头像—&gt;Settings 在左边会出现”Personal settings”栏目 点击“SSH and GPG keys” 点击New SSH key，添加在本地id_rsa.pub中内容，标题可以随便填写。 Step8 发布文章终端cd到blog文件夹下，执行如下命令新建文章： 1hexo new "postName" 名为postName.md的文件会建在目录~/Blog/source/_posts下。 文章编辑完成后，终端cd到blog文件夹下，执行如下命令来发布: 12hexo generate //生成静态页面hexo deploy //将文章部署到Github Step9 安装Next主题终端cd到 blog 目录下执行如下命令： 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 将blog目录下_config.yml里theme的名称landscape修改为next 终端cd到blog目录下执行如下命令(每次部署文章的步骤)： 123$ hexo clean //清除缓存文件 (db.json) 和已生成的静态文件 (public)$ hexo g //生成缓存和静态文件$ hexo d //重新部署到服务器 至于更改theme内容，比如名称，描述，头像等去修改blog/_config.yml文件和blog/themes/next/_config.yml文件中对应的属性名称即可，不要忘记冒号:后加空格。 注意按照本文搭建博客，启动时必须先输入以下内容： 1m87@m87:~$ nvm use --delete-prefix v8.1.3 其中，版本号按照安装版本号来修改。 报错总结(来源于网络) 1.出现 error deployer not found:git 或者 error deployer not found:github 的错误 解决办法：执行 npm install hexo-deployer-git --save 2.出现类似 FATAL can not read a block mapping entry; a multiline key may not be an implicit key at line 70, column 1: … 错误 解决办法：_config.yml中配置项的冒号后面要用空格隔开，再跟内容 3.中文乱码问题 解决办法：将文件的内容编码改为UTF8格式 4.’hexo sever’能够成功运行，但是localhost:4000无法访问 解决办法：执行hexo s -p 5000，改用其他端口启动]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>GitHub Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“RSS攻略”]]></title>
    <url>%2F2017%2F05%2F13%2FRSS%E9%98%85%E8%AF%BB%E6%94%BB%E7%95%A5%2F</url>
    <content type="text"><![CDATA[RSS攻略什么是RSSRSS 是一种简单的订阅方式。就像订报纸、杂志一样，您可以订阅任何喜欢的内容。 RSS服务由一系列栏目组成，每个栏目包括标题，介绍和网址链接。欲获取RSS服务，浏览最新网络新闻评论、分析及专栏作家文章等精彩内容，请看本页的详情。 RSS 指 Really Simple Syndication（真正简易联合） RSS 使您有能力聚合（syndicate）网站的内容 RSS 定义了非常简单的方法来共享和查看标题和内容 RSS 文件可被自动更新 RSS 允许为不同的网站进行视图的个性化 RSS 使用 XML 编写 但其实这些解释都是指同一种Syndication的技术。RSS目前广泛用于网上新闻频道，blog和wiki。使用RSS订阅能更快地获取信息，网站提供RSS输出，有利于让用户获取网站内容的最新更新。网络用户可以在客户端借助于支持RSS的聚合工具软件，在不打开网站内容页面的情况下阅读支持RSS输出的网站内容。 特点1、来源多样的个性化“聚合”特性；2、信息发布的时效、低成本特性；3、无“垃圾”信息、便利的本地内容管理特性。 用途1、订阅blog可以订阅工作中所需的技术文章，也可以订阅与你有共同爱好的作者的Blog，总之，对什么感兴趣就可以订什么。2、订阅新闻无论是奇闻怪事、明星消息、体坛风云，只要你想知道的，都可以订阅。订阅新闻你再也不用一个网站一个网站，一个网页一个网页去逛了。只要这将你需要的内容订阅在一个RSS阅读器中，这些内容就会自动出现你的阅读器里，你也不必为了一个急切想知道的消息而不断的刷新网页，因为一旦有了更新，RSS阅读器就会自己通知你。 优点 您可以看到没有广告和图片的标题或文章的概要阅读，这样你不必阅读全文即可知文章讲的一个意思是什么，为您节省时间。 RSS阅读器会自动更新你定制的网站内容，保持新闻的及时性。要订阅新闻，可以直接点击seo博客上的XML图标，或到专栏作者点击订阅文章，即完成订阅，每天你就可以打开RSS阅读最新文章，而不必打开网页了。 使用RSS可以根据你自已的喜好定制多个RSS提要，这样做的好处是从多个新闻来源搜集，然后整合新闻到单个数据流当中。 RSS提交给RSS网站后，不但容易带来网站流量，而且能加快搜索引擎收录与信息的推广。 缺点(1)RSS的应用远不如电子邮件普及，从而限制了RSS订阅的应用范围。(2)若长期不接收RSS信息，对于过期的信息则无法浏览。这是由于没有专门的服务器为每个用户保存信息，如果用户不及时接收，信息则过时不候。(3)难以评估RSS营销效果。因为在RSS中不能添加任何的脚本语言，使统计订阅人数比较困难，只能通过一些特别的技术方法来分析RSS的下载次数多少来估计订户数量，因而对于RSS营销效果无法准确地评价。(4)难以实现个性化服务。电子邮件的用户个性化技术已经非常成熟了，但对于通过RSS获取信息的方式而言，还没有得到很好地解决。 RSS 如何工作第一步，创建一个 RSS 文档，然后使用 .xml 后缀来保存它。然后把此文件上传到您的网站。接下来，通过一个 RSS 聚合器来注册。每天，聚合器都会到被注册的网站搜索 RSS 文档，校验其链接，并显示有关 feed 的信息，这样客户就能够链接到使他们产生兴趣的文档。 如何使用RSS您只需要下载和安装一个RSS新闻阅读器，然后从网站提供的RSS内容目录中订阅您感兴趣的栏目。订阅后，您将会自动获得所有内容的最新报道，并在每次新发布后会自动更新。 添加Feed添加Feed格式为”http://XXX.xml&quot; RSS阅读器推荐自从Google Reader关闭之后，一直找不到好用的RSS阅读器。国内常见好用的在线阅读器有(排名不分先后，寻找适合自己的即可)： 网易云阅读：http://yuedu.163.com/index 有道阅读器：http://reader.youdao.com/tools.html 深蓝阅读(支持iOS与安卓)：http://bluereader.org FeedDemon：http://www.feeddemon.com/ 一览阅读：https://www.yilan.io/ FeedMe(安卓)：http://coolapk.com/apk/com.seazon.feedme Feedly：https://feedly.com/i/welcome The Old Reader：https://theoldreader.com/ Aol Reader：http://reader.aol.com/ My Source(安卓)：http://www.coolapk.com/apk/com.creativetrends.mysource RSS阅读器(安卓)：http://www.coolapk.com/apk/com.madsvyat.simplerssreader ZEAKER：http://www.zealer.com/ 谷歌浏览器插件“小乐阅读”可以到Chrome应用商店在线安装或搜索crx离线包安装（附百度经验攻略） 如若订阅单一RSS阅读源，可以直接使用手机浏览器书签添加至桌面，可以直接在桌面快捷方式打开（此方法对手机适用）。 RSS阅读源推荐 RSS搜索：http://ctrlq.org/rss/ 人民网RSS订阅中心：http://rss.people.com.cn/ 网易RSS订阅中心:http://www.163.com/rss/ 科学网RSS：http://www.sciencenet.cn/RSS.aspx FT中文网：http://www.ftchinese.com/channel/rss.html nhzy资讯（健康生活）：http://www.nhzy.org/feed 南都周刊：http://www.nbweekly.com/rss/smw/ 网易新闻·有态度专栏：http://news.163.com/special/00011K6L/rss_newsattitude.xml cnBeta.COM业界资讯：http://feeds2.feedburner.com/cnbeta_full 月光博客：http://feed.williamlong.info/ 善用佳软：http://feed.xbeta.info/ 小众软件：http://feeds.appinn.com/appinns/ 褪墨：http://feed.mifengtd.cn/ 战隼的学习探索：http://www.read.org.cn/feed ”带人的技术“思维导图读书笔记：http://www.write.org.cn/feed 译言精选：http://www.adaymag.com/feed/ 适用RSS可以在获取消息上节约大量时间，避免因为广告等不相干内容浪费时间，相关内容介绍有很多，可以逐步探索发现。]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Blog</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[“局域网路地址冲突引起的回环问题探究”]]></title>
    <url>%2F2017%2F05%2F03%2F%E5%B1%80%E5%9F%9F%E7%BD%91%E8%B7%AF%E5%9C%B0%E5%9D%80%E5%86%B2%E7%AA%81%E5%BC%95%E8%B5%B7%E7%9A%84%E5%9B%9E%E7%8E%AF%E9%97%AE%E9%A2%98%E6%8E%A2%E7%A9%B6%2F</url>
    <content type="text"><![CDATA[#局域网路地址冲突引起的回环问题探究 0x01、问题描述在接替局域网络管理不久就有同事报障JXL有网络连接但出现网络不通、不能上网现象，而所在HDL与JXL网络同源，所以认为是JXL主交换机及内部网络问题。时隔不久又有SXL同事报障网路不通，QQ传送文件速度缓慢。继而发现HDL也存在网络速度缓慢、网络连接显示正常但不能上网的情况。 0x02、线路是否回环：逐级检查设备线路网络显示连接但网络不通，并且电脑网络缓慢。所以推测网络线路出现回环造成广播风暴，从而影响网络带宽。于是逐级检查是否有人插错或插乱网络线路，但检查后并无结果，据调查，单位设备已经安装达五年左右，因无统一规划，而是在使用中不断修补增加，所以对网络线路与设备配置文件存在疑惑，是否是由于线路老化或者设备配置命令因断电丢失而造成的节点网络拥塞。使用Telnet进入网络设备内部发现配置存在并且正常，但命令过于简单，只能达到上网需求。 0x03、监控设备致使带宽不足：网络服务商查询线路，升级网路带宽查看所在单位网络拓扑，发现网络中上网与视频监控串联在同一交换设备，而此现象不止一台交换机，由于交换机内并未做端口隔离，由此认为是监控系统影响了网络带宽，因而造成网络缓慢，电脑显示虽有连接却不能上网。于是联系网络服务商升级带宽。当升级到视频监控系统不影响网络带宽资源后，仍然发现故障区域不能正常上网。 0x04、网络抓包发现电脑存在ARP报文：安装杀毒软件 在折腾了两天后，认为网络故障不应该在物理线路和网络带宽问题上，于是转向软件方面。使用ping命令发送持续测试报文，发现收包只有零散几条，而ping命令的长报文全部丢失，使用笔记本到JXL与SXL使用Wireshark抓包软件，抓包发现在相应楼宇主交换机上发现大量ARP报文，ARP报文的作用是为网络中查询路径，一般为动态网络配置分配地址情况下使用，所在单位恰好由主路由器动态分配IP地址，网络中有十余条ARP报文属正常现象，而查询到的ARP报文在一个时间段竟然达到上百条，所以推测有ARP病毒攻击，致使持续发错误的数据包报文，造成网络阻塞，正常网络报文不能发送成功。于是给存在故障的电脑安装杀毒软件并进行深度扫描，果不其然发现有存在ARP病毒造成网关欺骗，因此确定此次网络的主要故障为部分电脑上带有的ARP病毒，造成网络阻塞，经过杀毒软件扫描处理后，网络恢复正常。再次抓包发现网络依然有ARP报文，但并不影响正常网络工作，由此网络故障基本告一段落。 0x05、再次发现同样问题：电脑杀毒软件并不能解决第一次解决网络问题后半年左右，又有同事报告网络局部不通，查看所处网络线路正常，认为与第一次故障基本相同，使用杀毒软件扫描处理后却发现并不能解决故障问题。 0x06、抓包发现ARP较多：Win XP可以上网，Win 7及以上Windows不能使用笔记本到故障区域抓包后发现ARP报文大量出现，由于第一次的故障而给单位同事都安装了杀毒软件，检查杀毒软件为正常状态，所以不认为故障是主机产生ARP病毒所致。分析抓包文件，发现大概有七台电脑持续发送ARP报文，而这七台电脑检查并无病毒干扰与特殊故障。同时在抓取的报文中除了电脑发送ARP报文外，还有五台左右的TP-Link及其它小型路由器也在持续发送ARP报文，TP-Link下联电脑产生的ARP并不能查看到，所以对电脑ARP报文的查询便成主要问题。在比较了正常网络区域和故障区域后发现一个奇怪现象：所有安装win xp系统电脑都能上网，而其他的win 7、win 8、win 10都有网络故障。自带笔记本系统为Linux系统，接入故障区域后也能够上网，由此看来此次ARP报文主要影响了win 7及以上的Windows系统电脑。若是网络病毒，最先受影响的应该是win xp系统电脑，而此次故障却反其道而行之，很是费解。 0x07、系统的网络底层设计问题：小型路由器地址与网络主路地址冲突上网查询发现遇到问题的解决方案都是将接入层的小型路由器模式改为交换模式。究其根本，交换模式并不能完全解决单位电脑和手机连接无线的上网问题。经询问厂家及其他技术人员，从而推测在Windows系统的网络架构上，win xp系统网络限制比较宽松，而win 7及以上系统的网络架构则较为紧凑严格，所以，当出现网络报文等故障问题时，win xp系统可以上网而win 7及以上却出现有连接、无数据交换甚至断路的现象。 0x08、查询TP-Link及解决办法：更改地址对于小型路由器的交换模式，研究后发现国内不仅TP-Link，还有其它很多小型家用路由器的初始地址都为192.168.0.1、192.168.1.1或者192.168.2.1，而此类地址正是所在单位内网的主要干路网络地址。如果家用路由器，则在家庭网络中，其网络服务商分配的地址为公有地址，接入家中的小型路由器则为私有地址，两者之间并不影响。顿时觉得造成单位网络故障的根本问题在于单位办公室内有同事私自架设即插即用的小型路由器，致使小型路由器地址与主网地址冲突，从而两者之间形成环路，导致网路主干线路ARP报文大幅度增加，导致网络有连接但不能上网。于是逐级为单位私自架设小型路由器的同事更改小型路由器的配置地址，从而避免与主网地址冲突。 0x09、后遗症：TP-Link重置问题配置结束后网路正常。但随之而来的新问题是单位同事并非计算机专业，有时由于断电、重置等特殊情况导致的小型路由器配置丢失情况时有发生，如果每次让网管中心人员修改配置，对于网管中心的人员工作量较大，也并不现实。 0x10、终招：主干网路禁止小型路由器接入对于有些私自接入的小型路由器并不能通知网管中心，而致使继续影响网络环境的小型路由器，可以在路由器或者二层交换机上直接禁用其mac地址，从而让网络保持通畅，相关配置命令如下：Swith(config)# mac address-table static xxxx.xxxx.xxxx vlan id drop注：不同设备命令不同，此为思科交换机命令。 总结：本次网络故障持续时间长，问题波及范围广。究其根本问题是网络组建时考虑不足，因而对网络设备配置缺失，从而造成故障问题出现后无应付能力。所以搭建网络需要合理规划，以确保各类网络井然有序。]]></content>
      <categories>
        <category>Network</category>
      </categories>
      <tags>
        <tag>Network</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F05%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>Blog</category>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>Github</tag>
      </tags>
  </entry>
</search>
